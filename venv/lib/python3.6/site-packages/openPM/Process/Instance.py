import pandas as pd
from openPM.Process.Activity import Activity
from openPM.Process.Attribute import Attribute
from typing import List


class Instance:
    """
    Describtion
    ------------
    The class represents a process instance of an process. A process instance is a sequence of activities with
    a clear start activity and end activity. In addition a process instance can also be described by attributes
    for example the average costs of this instance. A process consists of multiple process isntances.

    Parameters
    -----------
    instance : Instance container (pd.DataFrame) that holds all activities in a list as well as all attributes
        in corresponding to the instance
    activites : list of activities
    attributes : list of attributes
    """
    def __init__(self):
        self.__instance = None
        self.__activities = [] # type: List[Activity]
        self.__attributes = []  # type: List[Attribute]

    def __eq__(self, other):
        if self.activities == other.activities and self.attributes == other.attributes:
            return True
        else:
            return False

    def __repr__(self):
        return self.instance.to_string()

    def add_activity(self, activity: Activity):
        self.__activities.append(activity)

    def add_attribute(self, attribute: Attribute):
        self.__activities.append(attribute)

    @property
    def attributes(self):
        return self.__attributes

    @property
    def activities(self):
        return self.__activities
    
    @property
    def instance(self) -> pd.DataFrame:
        """
        Methods returns an pd.Dataframe. Labels are defined by the attribute names (attribute.key) of an
        activity and values are the corresponding attribute values (attribute.value)

        Parameters
        __________
        :return: pd.Dataframe

        Examples
        ________

            name   costs   org
        0   A1      560     Org2 --> One Activity
        1   B5      20      Org1
        2   A2      400     Org2

        """
        values = []
        for activity in self.__activities:
            dict = {}
            for attribute in activity.attributes:
                dict[attribute.key] = attribute.value
            values.append(dict)

        self.__instance = pd.DataFrame(values)
        return self.__instance
