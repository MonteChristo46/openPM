from openPM.Process.Attribute import Attribute
from typing import List

class Activity:
    """
        An acitvity represents one event in an process. However an activity can consist of several attributes
        like name, date or an timestamp.
    """
    def __init__(self, attributes: List[Attribute] = None):
        """
        Creates an acitvity instance that holds a list of attributes, which are describing the
        activity.

        Parameters
        __________
        :param attributes: Takes a list full of attributes
        """
        self.__attributes = [] # type: List[Attribute]
        if attributes is not None:
            self.__attributes = attributes

    def __eq__(self, other):
        if self.attributes == other.attributes:
            return True
        else:
            return False

    #def __repr__(self):
     #   return str(self.attributes)

    def add_attribute(self, attribute: Attribute):
        self.__attributes.append(attribute)

    @property
    def attributes(self) -> list:
        return self.__attributes
